package org.opentestsystem.delivery.logging;

import java.util.Map;

/**
 * Centralized event logger.
 */
public interface EventLogger {
  enum Checkpoint {
    NONE,
    ENTER,
    EXIT,
  }

  interface ILogEvent {
    String name();
  }

  interface IEventData {
    String name();
  }

  enum LogEvent implements ILogEvent {
    LOGIN,
    LOGOUT,
    UNKNOWN,
  }

  enum EventDataKey implements IEventData {
    APP,
    ELAPSED_TIME,
    CHECKPOINT,
    SESSION_ID,
    RESPONSE_CODE,
    SUB_EVENT,
  }

  /**
   * Log event occurrences to centralized logging.
   * <p>
   * These events are intended to be sent to a logstash server and searchable using elastic search.
   *
   * @param app        name of the app writing the log
   * @param logEvent   name of the event occurring
   * @param checkpoint an optional checkpoint name
   * @param sessionId  an optional unique identifier common to a set of log entries (generally a request's session ID)
   * @param message    an optional free-format message string to add to the log entry
   * @param data       optional searchable event data to add to the recorded event
   */
   void info(final String app, final String logEvent, final String checkpoint, final String sessionId,
                          final String message, final Map<IEventData, Object> data);

   void info(final EventData eventData);

  /**
   * Log event errors to centralized logging.
   * <p>
   * These events are intended to be sent to a logstash server and searchable using elastic search.
   *
   * @param app        name of the app writing the log
   * @param logEvent   name of the event occurring
   * @param checkpoint an optional checkpoint name
   * @param sessionId  an optional unique identifier common to a set of log entries (generally a request's session ID)
   * @param message    an optional free-format message string to add to the log entry
   * @param data       optional searchable event data to add to the recorded event
   */
  void error(final String app, final String logEvent, final String checkpoint, final String sessionId,
                           String message, final Map<IEventData, Object> data, final Exception e);
}
