package org.opentestsystem.delivery.logging;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.util.concurrent.TimeUnit;

import static org.opentestsystem.delivery.logging.EventLogger.Checkpoint.ENTER;
import static org.opentestsystem.delivery.logging.EventLogger.Checkpoint.EXIT;

public class LoggingInterceptor extends HandlerInterceptorAdapter {
    private final Long startNanoTime;
    private final EventLogger logger;
    private final EventParserFactory factory;

    @Autowired
    public LoggingInterceptor(final EventParserFactory factory, final EventLogger logger) {
        this.factory = factory;
        this.logger = logger;
        startNanoTime = System.nanoTime();
    }

    @Override
    public boolean preHandle(HttpServletRequest request,
                             HttpServletResponse response, Object handler) throws Exception {
        final EventParser parser = factory.get(request);
        final EventData eventData = parser.parsePreHandle(request);
        logger.info(ENTER, eventData);
        return true;
    }

    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
                           ModelAndView modelAndView) throws Exception {
        final EventParser parser = factory.get(request);
        final EventData eventData = parser.parsePostHandle(request, response);
        logger.info(EXIT, eventData);

        long elapsedNano = System.nanoTime() - startNanoTime;
        long elapsedMs = TimeUnit.MILLISECONDS.convert(elapsedNano, TimeUnit.NANOSECONDS);
        System.out.println(eventData.event() + " elapsed (ms): " + elapsedMs);
    }
}
