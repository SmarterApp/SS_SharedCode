package org.opentestsystem.delivery.logging;

import com.google.common.base.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import static org.opentestsystem.delivery.logging.EventLogger.Checkpoint.ENTER;
import static org.opentestsystem.delivery.logging.EventLogger.Checkpoint.EXIT;

public class LoggingInterceptor extends HandlerInterceptorAdapter {
  private final EventLogger logger;
  private final EventParserFactory factory;

  @Autowired
  public LoggingInterceptor(final EventParserFactory factory, final EventLogger logger) {
    this.factory = factory;
    this.logger = logger;
  }

  @Override
  public boolean preHandle(HttpServletRequest request,
                           HttpServletResponse response, Object handler) throws Exception {
    final EventParser parser = factory.get(request);
    final Optional<EventInfo> eventInfo = parser.parsePreHandle(request);
    if (eventInfo.isPresent()) {
      logger.info(ENTER, eventInfo.get());
    }
    return true;
  }

  @Override
  public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
                         ModelAndView modelAndView) throws Exception {
    final EventParser parser = factory.get(request);
    final Optional<EventInfo> eventInfo = parser.parsePostHandle(request, response);
    if (eventInfo.isPresent()) {
      logger.info(EXIT, eventInfo.get());
    }
  }
}
